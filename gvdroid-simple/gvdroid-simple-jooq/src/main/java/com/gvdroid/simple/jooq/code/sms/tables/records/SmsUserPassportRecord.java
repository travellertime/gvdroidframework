/*
 * This file is generated by jOOQ.
 */
package com.gvdroid.simple.jooq.code.sms.tables.records;


import com.gvdroid.simple.jooq.code.sms.tables.SmsUserPassport;
import com.gvdroid.simple.jooq.code.sms.tables.interfaces.ISmsUserPassport;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 权限-用户登陆凭证
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmsUserPassportRecord extends UpdatableRecordImpl<SmsUserPassportRecord> implements Record17<Long, Long, String, String, String, String, LocalDateTime, Integer, Boolean, LocalDateTime, String, String, LocalDateTime, String, String, Integer, String>, ISmsUserPassport {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sms.sms_user_passport.id</code>. 主键
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>sms.sms_user_passport.id</code>. 主键
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>sms.sms_user_passport.userId</code>. 用户编号
     */
    @Override
    public void setUserid(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>sms.sms_user_passport.userId</code>. 用户编号
     */
    @Override
    public Long getUserid() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>sms.sms_user_passport.passportType</code>. 账号类型 account, weixin, qq, weibo, jd, github
     */
    @Override
    public void setPassporttype(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>sms.sms_user_passport.passportType</code>. 账号类型 account, weixin, qq, weibo, jd, github
     */
    @Override
    public String getPassporttype() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sms.sms_user_passport.passportNo</code>. 登录账号
     */
    @Override
    public void setPassportno(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>sms.sms_user_passport.passportNo</code>. 登录账号
     */
    @Override
    public String getPassportno() {
        return (String) get(3);
    }

    /**
     * Setter for <code>sms.sms_user_passport.saltCode</code>. 混淆码
     */
    @Override
    public void setSaltcode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>sms.sms_user_passport.saltCode</code>. 混淆码
     */
    @Override
    public String getSaltcode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>sms.sms_user_passport.password</code>. 登录密码
     */
    @Override
    public void setPassword(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>sms.sms_user_passport.password</code>. 登录密码
     */
    @Override
    public String getPassword() {
        return (String) get(5);
    }

    /**
     * Setter for <code>sms.sms_user_passport.lastLoginDate</code>. 上次登录时间
     */
    @Override
    public void setLastlogindate(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>sms.sms_user_passport.lastLoginDate</code>. 上次登录时间
     */
    @Override
    public LocalDateTime getLastlogindate() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>sms.sms_user_passport.status</code>. 状态 1 normal
     */
    @Override
    public void setStatus(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>sms.sms_user_passport.status</code>. 状态 1 normal
     */
    @Override
    public Integer getStatus() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>sms.sms_user_passport.deleted</code>. 删除状态 0 正常 1 逻辑删除
     */
    @Override
    public void setDeleted(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>sms.sms_user_passport.deleted</code>. 删除状态 0 正常 1 逻辑删除
     */
    @Override
    public Boolean getDeleted() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>sms.sms_user_passport.createDate</code>. 创建时间
     */
    @Override
    public void setCreatedate(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>sms.sms_user_passport.createDate</code>. 创建时间
     */
    @Override
    public LocalDateTime getCreatedate() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>sms.sms_user_passport.createUser</code>. 创建人员
     */
    @Override
    public void setCreateuser(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>sms.sms_user_passport.createUser</code>. 创建人员
     */
    @Override
    public String getCreateuser() {
        return (String) get(10);
    }

    /**
     * Setter for <code>sms.sms_user_passport.createOrg</code>. 创建机构
     */
    @Override
    public void setCreateorg(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>sms.sms_user_passport.createOrg</code>. 创建机构
     */
    @Override
    public String getCreateorg() {
        return (String) get(11);
    }

    /**
     * Setter for <code>sms.sms_user_passport.updateDate</code>. 维护时间
     */
    @Override
    public void setUpdatedate(LocalDateTime value) {
        set(12, value);
    }

    /**
     * Getter for <code>sms.sms_user_passport.updateDate</code>. 维护时间
     */
    @Override
    public LocalDateTime getUpdatedate() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>sms.sms_user_passport.updateUser</code>. 维护人员
     */
    @Override
    public void setUpdateuser(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>sms.sms_user_passport.updateUser</code>. 维护人员
     */
    @Override
    public String getUpdateuser() {
        return (String) get(13);
    }

    /**
     * Setter for <code>sms.sms_user_passport.updateOrg</code>. 维护机构
     */
    @Override
    public void setUpdateorg(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>sms.sms_user_passport.updateOrg</code>. 维护机构
     */
    @Override
    public String getUpdateorg() {
        return (String) get(14);
    }

    /**
     * Setter for <code>sms.sms_user_passport.updateNo</code>. 维护序号
     */
    @Override
    public void setUpdateno(Integer value) {
        set(15, value);
    }

    /**
     * Getter for <code>sms.sms_user_passport.updateNo</code>. 维护序号
     */
    @Override
    public Integer getUpdateno() {
        return (Integer) get(15);
    }

    /**
     * Setter for <code>sms.sms_user_passport.entityId</code>. 所属实体
     */
    @Override
    public void setEntityid(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>sms.sms_user_passport.entityId</code>. 所属实体
     */
    @Override
    public String getEntityid() {
        return (String) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row17<Long, Long, String, String, String, String, LocalDateTime, Integer, Boolean, LocalDateTime, String, String, LocalDateTime, String, String, Integer, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    public Row17<Long, Long, String, String, String, String, LocalDateTime, Integer, Boolean, LocalDateTime, String, String, LocalDateTime, String, String, Integer, String> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return SmsUserPassport.SMS_USER_PASSPORT.ID;
    }

    @Override
    public Field<Long> field2() {
        return SmsUserPassport.SMS_USER_PASSPORT.USERID;
    }

    @Override
    public Field<String> field3() {
        return SmsUserPassport.SMS_USER_PASSPORT.PASSPORTTYPE;
    }

    @Override
    public Field<String> field4() {
        return SmsUserPassport.SMS_USER_PASSPORT.PASSPORTNO;
    }

    @Override
    public Field<String> field5() {
        return SmsUserPassport.SMS_USER_PASSPORT.SALTCODE;
    }

    @Override
    public Field<String> field6() {
        return SmsUserPassport.SMS_USER_PASSPORT.PASSWORD;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return SmsUserPassport.SMS_USER_PASSPORT.LASTLOGINDATE;
    }

    @Override
    public Field<Integer> field8() {
        return SmsUserPassport.SMS_USER_PASSPORT.STATUS;
    }

    @Override
    public Field<Boolean> field9() {
        return SmsUserPassport.SMS_USER_PASSPORT.DELETED;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return SmsUserPassport.SMS_USER_PASSPORT.CREATEDATE;
    }

    @Override
    public Field<String> field11() {
        return SmsUserPassport.SMS_USER_PASSPORT.CREATEUSER;
    }

    @Override
    public Field<String> field12() {
        return SmsUserPassport.SMS_USER_PASSPORT.CREATEORG;
    }

    @Override
    public Field<LocalDateTime> field13() {
        return SmsUserPassport.SMS_USER_PASSPORT.UPDATEDATE;
    }

    @Override
    public Field<String> field14() {
        return SmsUserPassport.SMS_USER_PASSPORT.UPDATEUSER;
    }

    @Override
    public Field<String> field15() {
        return SmsUserPassport.SMS_USER_PASSPORT.UPDATEORG;
    }

    @Override
    public Field<Integer> field16() {
        return SmsUserPassport.SMS_USER_PASSPORT.UPDATENO;
    }

    @Override
    public Field<String> field17() {
        return SmsUserPassport.SMS_USER_PASSPORT.ENTITYID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserid();
    }

    @Override
    public String component3() {
        return getPassporttype();
    }

    @Override
    public String component4() {
        return getPassportno();
    }

    @Override
    public String component5() {
        return getSaltcode();
    }

    @Override
    public String component6() {
        return getPassword();
    }

    @Override
    public LocalDateTime component7() {
        return getLastlogindate();
    }

    @Override
    public Integer component8() {
        return getStatus();
    }

    @Override
    public Boolean component9() {
        return getDeleted();
    }

    @Override
    public LocalDateTime component10() {
        return getCreatedate();
    }

    @Override
    public String component11() {
        return getCreateuser();
    }

    @Override
    public String component12() {
        return getCreateorg();
    }

    @Override
    public LocalDateTime component13() {
        return getUpdatedate();
    }

    @Override
    public String component14() {
        return getUpdateuser();
    }

    @Override
    public String component15() {
        return getUpdateorg();
    }

    @Override
    public Integer component16() {
        return getUpdateno();
    }

    @Override
    public String component17() {
        return getEntityid();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserid();
    }

    @Override
    public String value3() {
        return getPassporttype();
    }

    @Override
    public String value4() {
        return getPassportno();
    }

    @Override
    public String value5() {
        return getSaltcode();
    }

    @Override
    public String value6() {
        return getPassword();
    }

    @Override
    public LocalDateTime value7() {
        return getLastlogindate();
    }

    @Override
    public Integer value8() {
        return getStatus();
    }

    @Override
    public Boolean value9() {
        return getDeleted();
    }

    @Override
    public LocalDateTime value10() {
        return getCreatedate();
    }

    @Override
    public String value11() {
        return getCreateuser();
    }

    @Override
    public String value12() {
        return getCreateorg();
    }

    @Override
    public LocalDateTime value13() {
        return getUpdatedate();
    }

    @Override
    public String value14() {
        return getUpdateuser();
    }

    @Override
    public String value15() {
        return getUpdateorg();
    }

    @Override
    public Integer value16() {
        return getUpdateno();
    }

    @Override
    public String value17() {
        return getEntityid();
    }

    @Override
    public SmsUserPassportRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SmsUserPassportRecord value2(Long value) {
        setUserid(value);
        return this;
    }

    @Override
    public SmsUserPassportRecord value3(String value) {
        setPassporttype(value);
        return this;
    }

    @Override
    public SmsUserPassportRecord value4(String value) {
        setPassportno(value);
        return this;
    }

    @Override
    public SmsUserPassportRecord value5(String value) {
        setSaltcode(value);
        return this;
    }

    @Override
    public SmsUserPassportRecord value6(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public SmsUserPassportRecord value7(LocalDateTime value) {
        setLastlogindate(value);
        return this;
    }

    @Override
    public SmsUserPassportRecord value8(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public SmsUserPassportRecord value9(Boolean value) {
        setDeleted(value);
        return this;
    }

    @Override
    public SmsUserPassportRecord value10(LocalDateTime value) {
        setCreatedate(value);
        return this;
    }

    @Override
    public SmsUserPassportRecord value11(String value) {
        setCreateuser(value);
        return this;
    }

    @Override
    public SmsUserPassportRecord value12(String value) {
        setCreateorg(value);
        return this;
    }

    @Override
    public SmsUserPassportRecord value13(LocalDateTime value) {
        setUpdatedate(value);
        return this;
    }

    @Override
    public SmsUserPassportRecord value14(String value) {
        setUpdateuser(value);
        return this;
    }

    @Override
    public SmsUserPassportRecord value15(String value) {
        setUpdateorg(value);
        return this;
    }

    @Override
    public SmsUserPassportRecord value16(Integer value) {
        setUpdateno(value);
        return this;
    }

    @Override
    public SmsUserPassportRecord value17(String value) {
        setEntityid(value);
        return this;
    }

    @Override
    public SmsUserPassportRecord values(Long value1, Long value2, String value3, String value4, String value5, String value6, LocalDateTime value7, Integer value8, Boolean value9, LocalDateTime value10, String value11, String value12, LocalDateTime value13, String value14, String value15, Integer value16, String value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ISmsUserPassport from) {
        setId(from.getId());
        setUserid(from.getUserid());
        setPassporttype(from.getPassporttype());
        setPassportno(from.getPassportno());
        setSaltcode(from.getSaltcode());
        setPassword(from.getPassword());
        setLastlogindate(from.getLastlogindate());
        setStatus(from.getStatus());
        setDeleted(from.getDeleted());
        setCreatedate(from.getCreatedate());
        setCreateuser(from.getCreateuser());
        setCreateorg(from.getCreateorg());
        setUpdatedate(from.getUpdatedate());
        setUpdateuser(from.getUpdateuser());
        setUpdateorg(from.getUpdateorg());
        setUpdateno(from.getUpdateno());
        setEntityid(from.getEntityid());
    }

    @Override
    public <E extends ISmsUserPassport> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SmsUserPassportRecord
     */
    public SmsUserPassportRecord() {
        super(SmsUserPassport.SMS_USER_PASSPORT);
    }

    /**
     * Create a detached, initialised SmsUserPassportRecord
     */
    public SmsUserPassportRecord(Long id, Long userid, String passporttype, String passportno, String saltcode, String password, LocalDateTime lastlogindate, Integer status, Boolean deleted, LocalDateTime createdate, String createuser, String createorg, LocalDateTime updatedate, String updateuser, String updateorg, Integer updateno, String entityid) {
        super(SmsUserPassport.SMS_USER_PASSPORT);

        setId(id);
        setUserid(userid);
        setPassporttype(passporttype);
        setPassportno(passportno);
        setSaltcode(saltcode);
        setPassword(password);
        setLastlogindate(lastlogindate);
        setStatus(status);
        setDeleted(deleted);
        setCreatedate(createdate);
        setCreateuser(createuser);
        setCreateorg(createorg);
        setUpdatedate(updatedate);
        setUpdateuser(updateuser);
        setUpdateorg(updateorg);
        setUpdateno(updateno);
        setEntityid(entityid);
    }
}
