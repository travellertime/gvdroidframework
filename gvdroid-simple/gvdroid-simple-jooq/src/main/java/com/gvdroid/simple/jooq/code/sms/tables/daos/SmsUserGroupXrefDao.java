/*
 * This file is generated by jOOQ.
 */
package com.gvdroid.simple.jooq.code.sms.tables.daos;


import com.gvdroid.simple.jooq.code.sms.tables.SmsUserGroupXref;
import com.gvdroid.simple.jooq.code.sms.tables.records.SmsUserGroupXrefRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * 权限-用户用户组关联表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class SmsUserGroupXrefDao extends DAOImpl<SmsUserGroupXrefRecord, com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref, Long> {

    /**
     * Create a new SmsUserGroupXrefDao without any configuration
     */
    public SmsUserGroupXrefDao() {
        super(SmsUserGroupXref.SMS_USER_GROUP_XREF, com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref.class);
    }

    /**
     * Create a new SmsUserGroupXrefDao with an attached configuration
     */
    @Autowired
    public SmsUserGroupXrefDao(Configuration configuration) {
        super(SmsUserGroupXref.SMS_USER_GROUP_XREF, com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref.class, configuration);
    }

    @Override
    public Long getId(com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SmsUserGroupXref.SMS_USER_GROUP_XREF.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchById(Long... values) {
        return fetch(SmsUserGroupXref.SMS_USER_GROUP_XREF.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref fetchOneById(Long value) {
        return fetchOne(SmsUserGroupXref.SMS_USER_GROUP_XREF.ID, value);
    }

    /**
     * Fetch records that have <code>userId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchRangeOfUserid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SmsUserGroupXref.SMS_USER_GROUP_XREF.USERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>userId IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchByUserid(Long... values) {
        return fetch(SmsUserGroupXref.SMS_USER_GROUP_XREF.USERID, values);
    }

    /**
     * Fetch records that have <code>groupId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchRangeOfGroupid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SmsUserGroupXref.SMS_USER_GROUP_XREF.GROUPID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>groupId IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchByGroupid(Long... values) {
        return fetch(SmsUserGroupXref.SMS_USER_GROUP_XREF.GROUPID, values);
    }

    /**
     * Fetch records that have <code>defaulted BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchRangeOfDefaulted(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(SmsUserGroupXref.SMS_USER_GROUP_XREF.DEFAULTED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>defaulted IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchByDefaulted(Boolean... values) {
        return fetch(SmsUserGroupXref.SMS_USER_GROUP_XREF.DEFAULTED, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchRangeOfStatus(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(SmsUserGroupXref.SMS_USER_GROUP_XREF.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchByStatus(Integer... values) {
        return fetch(SmsUserGroupXref.SMS_USER_GROUP_XREF.STATUS, values);
    }

    /**
     * Fetch records that have <code>deleted BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchRangeOfDeleted(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(SmsUserGroupXref.SMS_USER_GROUP_XREF.DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchByDeleted(Boolean... values) {
        return fetch(SmsUserGroupXref.SMS_USER_GROUP_XREF.DELETED, values);
    }

    /**
     * Fetch records that have <code>createDate BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchRangeOfCreatedate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(SmsUserGroupXref.SMS_USER_GROUP_XREF.CREATEDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>createDate IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchByCreatedate(LocalDateTime... values) {
        return fetch(SmsUserGroupXref.SMS_USER_GROUP_XREF.CREATEDATE, values);
    }

    /**
     * Fetch records that have <code>createUser BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchRangeOfCreateuser(String lowerInclusive, String upperInclusive) {
        return fetchRange(SmsUserGroupXref.SMS_USER_GROUP_XREF.CREATEUSER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>createUser IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchByCreateuser(String... values) {
        return fetch(SmsUserGroupXref.SMS_USER_GROUP_XREF.CREATEUSER, values);
    }

    /**
     * Fetch records that have <code>createOrg BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchRangeOfCreateorg(String lowerInclusive, String upperInclusive) {
        return fetchRange(SmsUserGroupXref.SMS_USER_GROUP_XREF.CREATEORG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>createOrg IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchByCreateorg(String... values) {
        return fetch(SmsUserGroupXref.SMS_USER_GROUP_XREF.CREATEORG, values);
    }

    /**
     * Fetch records that have <code>updateDate BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchRangeOfUpdatedate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(SmsUserGroupXref.SMS_USER_GROUP_XREF.UPDATEDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updateDate IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchByUpdatedate(LocalDateTime... values) {
        return fetch(SmsUserGroupXref.SMS_USER_GROUP_XREF.UPDATEDATE, values);
    }

    /**
     * Fetch records that have <code>updateUser BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchRangeOfUpdateuser(String lowerInclusive, String upperInclusive) {
        return fetchRange(SmsUserGroupXref.SMS_USER_GROUP_XREF.UPDATEUSER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updateUser IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchByUpdateuser(String... values) {
        return fetch(SmsUserGroupXref.SMS_USER_GROUP_XREF.UPDATEUSER, values);
    }

    /**
     * Fetch records that have <code>updateOrg BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchRangeOfUpdateorg(String lowerInclusive, String upperInclusive) {
        return fetchRange(SmsUserGroupXref.SMS_USER_GROUP_XREF.UPDATEORG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updateOrg IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchByUpdateorg(String... values) {
        return fetch(SmsUserGroupXref.SMS_USER_GROUP_XREF.UPDATEORG, values);
    }

    /**
     * Fetch records that have <code>updateNo BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchRangeOfUpdateno(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(SmsUserGroupXref.SMS_USER_GROUP_XREF.UPDATENO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updateNo IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchByUpdateno(Integer... values) {
        return fetch(SmsUserGroupXref.SMS_USER_GROUP_XREF.UPDATENO, values);
    }

    /**
     * Fetch records that have <code>entityId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchRangeOfEntityid(String lowerInclusive, String upperInclusive) {
        return fetchRange(SmsUserGroupXref.SMS_USER_GROUP_XREF.ENTITYID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>entityId IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserGroupXref> fetchByEntityid(String... values) {
        return fetch(SmsUserGroupXref.SMS_USER_GROUP_XREF.ENTITYID, values);
    }
}
