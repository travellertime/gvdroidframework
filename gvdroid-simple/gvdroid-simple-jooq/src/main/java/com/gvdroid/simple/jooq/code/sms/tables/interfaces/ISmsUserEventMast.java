/*
 * This file is generated by jOOQ.
 */
package com.gvdroid.simple.jooq.code.sms.tables.interfaces;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * 权限-用户事件主表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ISmsUserEventMast extends Serializable {

    /**
     * Setter for <code>sms.sms_user_event_mast.id</code>. 主键
     */
    public void setId(Long value);

    /**
     * Getter for <code>sms.sms_user_event_mast.id</code>. 主键
     */
    public Long getId();

    /**
     * Setter for <code>sms.sms_user_event_mast.userId</code>. 用户编号
     */
    public void setUserid(Long value);

    /**
     * Getter for <code>sms.sms_user_event_mast.userId</code>. 用户编号
     */
    public Long getUserid();

    /**
     * Setter for <code>sms.sms_user_event_mast.eventType</code>. 事件类型 signup, signoff, signin, signout, binding, unbinding, locked, unlock
     */
    public void setEventtype(String value);

    /**
     * Getter for <code>sms.sms_user_event_mast.eventType</code>. 事件类型 signup, signoff, signin, signout, binding, unbinding, locked, unlock
     */
    public String getEventtype();

    /**
     * Setter for <code>sms.sms_user_event_mast.content</code>. 事件对象
     */
    public void setContent(String value);

    /**
     * Getter for <code>sms.sms_user_event_mast.content</code>. 事件对象
     */
    public String getContent();

    /**
     * Setter for <code>sms.sms_user_event_mast.memo</code>. 事件描述
     */
    public void setMemo(String value);

    /**
     * Getter for <code>sms.sms_user_event_mast.memo</code>. 事件描述
     */
    public String getMemo();

    /**
     * Setter for <code>sms.sms_user_event_mast.status</code>. 状态 1 normal
     */
    public void setStatus(Integer value);

    /**
     * Getter for <code>sms.sms_user_event_mast.status</code>. 状态 1 normal
     */
    public Integer getStatus();

    /**
     * Setter for <code>sms.sms_user_event_mast.deleted</code>. 删除状态 0 正常 1 逻辑删除
     */
    public void setDeleted(Boolean value);

    /**
     * Getter for <code>sms.sms_user_event_mast.deleted</code>. 删除状态 0 正常 1 逻辑删除
     */
    public Boolean getDeleted();

    /**
     * Setter for <code>sms.sms_user_event_mast.createDate</code>. 创建时间
     */
    public void setCreatedate(LocalDateTime value);

    /**
     * Getter for <code>sms.sms_user_event_mast.createDate</code>. 创建时间
     */
    public LocalDateTime getCreatedate();

    /**
     * Setter for <code>sms.sms_user_event_mast.createUser</code>. 创建人员
     */
    public void setCreateuser(String value);

    /**
     * Getter for <code>sms.sms_user_event_mast.createUser</code>. 创建人员
     */
    public String getCreateuser();

    /**
     * Setter for <code>sms.sms_user_event_mast.createOrg</code>. 创建机构
     */
    public void setCreateorg(String value);

    /**
     * Getter for <code>sms.sms_user_event_mast.createOrg</code>. 创建机构
     */
    public String getCreateorg();

    /**
     * Setter for <code>sms.sms_user_event_mast.updateDate</code>. 维护时间
     */
    public void setUpdatedate(LocalDateTime value);

    /**
     * Getter for <code>sms.sms_user_event_mast.updateDate</code>. 维护时间
     */
    public LocalDateTime getUpdatedate();

    /**
     * Setter for <code>sms.sms_user_event_mast.updateUser</code>. 维护人员
     */
    public void setUpdateuser(String value);

    /**
     * Getter for <code>sms.sms_user_event_mast.updateUser</code>. 维护人员
     */
    public String getUpdateuser();

    /**
     * Setter for <code>sms.sms_user_event_mast.updateOrg</code>. 维护机构
     */
    public void setUpdateorg(String value);

    /**
     * Getter for <code>sms.sms_user_event_mast.updateOrg</code>. 维护机构
     */
    public String getUpdateorg();

    /**
     * Setter for <code>sms.sms_user_event_mast.updateNo</code>. 维护序号
     */
    public void setUpdateno(Integer value);

    /**
     * Getter for <code>sms.sms_user_event_mast.updateNo</code>. 维护序号
     */
    public Integer getUpdateno();

    /**
     * Setter for <code>sms.sms_user_event_mast.entityId</code>. 所属实体
     */
    public void setEntityid(String value);

    /**
     * Getter for <code>sms.sms_user_event_mast.entityId</code>. 所属实体
     */
    public String getEntityid();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ISmsUserEventMast
     */
    public void from(ISmsUserEventMast from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ISmsUserEventMast
     */
    public <E extends ISmsUserEventMast> E into(E into);
}
