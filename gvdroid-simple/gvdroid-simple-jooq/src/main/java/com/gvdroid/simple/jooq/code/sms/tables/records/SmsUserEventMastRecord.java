/*
 * This file is generated by jOOQ.
 */
package com.gvdroid.simple.jooq.code.sms.tables.records;


import com.gvdroid.simple.jooq.code.sms.tables.SmsUserEventMast;
import com.gvdroid.simple.jooq.code.sms.tables.interfaces.ISmsUserEventMast;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 权限-用户事件主表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmsUserEventMastRecord extends UpdatableRecordImpl<SmsUserEventMastRecord> implements Record15<Long, Long, String, String, String, Integer, Boolean, LocalDateTime, String, String, LocalDateTime, String, String, Integer, String>, ISmsUserEventMast {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sms.sms_user_event_mast.id</code>. 主键
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>sms.sms_user_event_mast.id</code>. 主键
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>sms.sms_user_event_mast.userId</code>. 用户编号
     */
    @Override
    public void setUserid(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>sms.sms_user_event_mast.userId</code>. 用户编号
     */
    @Override
    public Long getUserid() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>sms.sms_user_event_mast.eventType</code>. 事件类型 signup, signoff, signin, signout, binding, unbinding, locked, unlock
     */
    @Override
    public void setEventtype(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>sms.sms_user_event_mast.eventType</code>. 事件类型 signup, signoff, signin, signout, binding, unbinding, locked, unlock
     */
    @Override
    public String getEventtype() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sms.sms_user_event_mast.content</code>. 事件对象
     */
    @Override
    public void setContent(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>sms.sms_user_event_mast.content</code>. 事件对象
     */
    @Override
    public String getContent() {
        return (String) get(3);
    }

    /**
     * Setter for <code>sms.sms_user_event_mast.memo</code>. 事件描述
     */
    @Override
    public void setMemo(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>sms.sms_user_event_mast.memo</code>. 事件描述
     */
    @Override
    public String getMemo() {
        return (String) get(4);
    }

    /**
     * Setter for <code>sms.sms_user_event_mast.status</code>. 状态 1 normal
     */
    @Override
    public void setStatus(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>sms.sms_user_event_mast.status</code>. 状态 1 normal
     */
    @Override
    public Integer getStatus() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>sms.sms_user_event_mast.deleted</code>. 删除状态 0 正常 1 逻辑删除
     */
    @Override
    public void setDeleted(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>sms.sms_user_event_mast.deleted</code>. 删除状态 0 正常 1 逻辑删除
     */
    @Override
    public Boolean getDeleted() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>sms.sms_user_event_mast.createDate</code>. 创建时间
     */
    @Override
    public void setCreatedate(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>sms.sms_user_event_mast.createDate</code>. 创建时间
     */
    @Override
    public LocalDateTime getCreatedate() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>sms.sms_user_event_mast.createUser</code>. 创建人员
     */
    @Override
    public void setCreateuser(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>sms.sms_user_event_mast.createUser</code>. 创建人员
     */
    @Override
    public String getCreateuser() {
        return (String) get(8);
    }

    /**
     * Setter for <code>sms.sms_user_event_mast.createOrg</code>. 创建机构
     */
    @Override
    public void setCreateorg(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>sms.sms_user_event_mast.createOrg</code>. 创建机构
     */
    @Override
    public String getCreateorg() {
        return (String) get(9);
    }

    /**
     * Setter for <code>sms.sms_user_event_mast.updateDate</code>. 维护时间
     */
    @Override
    public void setUpdatedate(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>sms.sms_user_event_mast.updateDate</code>. 维护时间
     */
    @Override
    public LocalDateTime getUpdatedate() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>sms.sms_user_event_mast.updateUser</code>. 维护人员
     */
    @Override
    public void setUpdateuser(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>sms.sms_user_event_mast.updateUser</code>. 维护人员
     */
    @Override
    public String getUpdateuser() {
        return (String) get(11);
    }

    /**
     * Setter for <code>sms.sms_user_event_mast.updateOrg</code>. 维护机构
     */
    @Override
    public void setUpdateorg(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>sms.sms_user_event_mast.updateOrg</code>. 维护机构
     */
    @Override
    public String getUpdateorg() {
        return (String) get(12);
    }

    /**
     * Setter for <code>sms.sms_user_event_mast.updateNo</code>. 维护序号
     */
    @Override
    public void setUpdateno(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>sms.sms_user_event_mast.updateNo</code>. 维护序号
     */
    @Override
    public Integer getUpdateno() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>sms.sms_user_event_mast.entityId</code>. 所属实体
     */
    @Override
    public void setEntityid(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>sms.sms_user_event_mast.entityId</code>. 所属实体
     */
    @Override
    public String getEntityid() {
        return (String) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row15<Long, Long, String, String, String, Integer, Boolean, LocalDateTime, String, String, LocalDateTime, String, String, Integer, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    @Override
    public Row15<Long, Long, String, String, String, Integer, Boolean, LocalDateTime, String, String, LocalDateTime, String, String, Integer, String> valuesRow() {
        return (Row15) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return SmsUserEventMast.SMS_USER_EVENT_MAST.ID;
    }

    @Override
    public Field<Long> field2() {
        return SmsUserEventMast.SMS_USER_EVENT_MAST.USERID;
    }

    @Override
    public Field<String> field3() {
        return SmsUserEventMast.SMS_USER_EVENT_MAST.EVENTTYPE;
    }

    @Override
    public Field<String> field4() {
        return SmsUserEventMast.SMS_USER_EVENT_MAST.CONTENT;
    }

    @Override
    public Field<String> field5() {
        return SmsUserEventMast.SMS_USER_EVENT_MAST.MEMO;
    }

    @Override
    public Field<Integer> field6() {
        return SmsUserEventMast.SMS_USER_EVENT_MAST.STATUS;
    }

    @Override
    public Field<Boolean> field7() {
        return SmsUserEventMast.SMS_USER_EVENT_MAST.DELETED;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return SmsUserEventMast.SMS_USER_EVENT_MAST.CREATEDATE;
    }

    @Override
    public Field<String> field9() {
        return SmsUserEventMast.SMS_USER_EVENT_MAST.CREATEUSER;
    }

    @Override
    public Field<String> field10() {
        return SmsUserEventMast.SMS_USER_EVENT_MAST.CREATEORG;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return SmsUserEventMast.SMS_USER_EVENT_MAST.UPDATEDATE;
    }

    @Override
    public Field<String> field12() {
        return SmsUserEventMast.SMS_USER_EVENT_MAST.UPDATEUSER;
    }

    @Override
    public Field<String> field13() {
        return SmsUserEventMast.SMS_USER_EVENT_MAST.UPDATEORG;
    }

    @Override
    public Field<Integer> field14() {
        return SmsUserEventMast.SMS_USER_EVENT_MAST.UPDATENO;
    }

    @Override
    public Field<String> field15() {
        return SmsUserEventMast.SMS_USER_EVENT_MAST.ENTITYID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserid();
    }

    @Override
    public String component3() {
        return getEventtype();
    }

    @Override
    public String component4() {
        return getContent();
    }

    @Override
    public String component5() {
        return getMemo();
    }

    @Override
    public Integer component6() {
        return getStatus();
    }

    @Override
    public Boolean component7() {
        return getDeleted();
    }

    @Override
    public LocalDateTime component8() {
        return getCreatedate();
    }

    @Override
    public String component9() {
        return getCreateuser();
    }

    @Override
    public String component10() {
        return getCreateorg();
    }

    @Override
    public LocalDateTime component11() {
        return getUpdatedate();
    }

    @Override
    public String component12() {
        return getUpdateuser();
    }

    @Override
    public String component13() {
        return getUpdateorg();
    }

    @Override
    public Integer component14() {
        return getUpdateno();
    }

    @Override
    public String component15() {
        return getEntityid();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserid();
    }

    @Override
    public String value3() {
        return getEventtype();
    }

    @Override
    public String value4() {
        return getContent();
    }

    @Override
    public String value5() {
        return getMemo();
    }

    @Override
    public Integer value6() {
        return getStatus();
    }

    @Override
    public Boolean value7() {
        return getDeleted();
    }

    @Override
    public LocalDateTime value8() {
        return getCreatedate();
    }

    @Override
    public String value9() {
        return getCreateuser();
    }

    @Override
    public String value10() {
        return getCreateorg();
    }

    @Override
    public LocalDateTime value11() {
        return getUpdatedate();
    }

    @Override
    public String value12() {
        return getUpdateuser();
    }

    @Override
    public String value13() {
        return getUpdateorg();
    }

    @Override
    public Integer value14() {
        return getUpdateno();
    }

    @Override
    public String value15() {
        return getEntityid();
    }

    @Override
    public SmsUserEventMastRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SmsUserEventMastRecord value2(Long value) {
        setUserid(value);
        return this;
    }

    @Override
    public SmsUserEventMastRecord value3(String value) {
        setEventtype(value);
        return this;
    }

    @Override
    public SmsUserEventMastRecord value4(String value) {
        setContent(value);
        return this;
    }

    @Override
    public SmsUserEventMastRecord value5(String value) {
        setMemo(value);
        return this;
    }

    @Override
    public SmsUserEventMastRecord value6(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public SmsUserEventMastRecord value7(Boolean value) {
        setDeleted(value);
        return this;
    }

    @Override
    public SmsUserEventMastRecord value8(LocalDateTime value) {
        setCreatedate(value);
        return this;
    }

    @Override
    public SmsUserEventMastRecord value9(String value) {
        setCreateuser(value);
        return this;
    }

    @Override
    public SmsUserEventMastRecord value10(String value) {
        setCreateorg(value);
        return this;
    }

    @Override
    public SmsUserEventMastRecord value11(LocalDateTime value) {
        setUpdatedate(value);
        return this;
    }

    @Override
    public SmsUserEventMastRecord value12(String value) {
        setUpdateuser(value);
        return this;
    }

    @Override
    public SmsUserEventMastRecord value13(String value) {
        setUpdateorg(value);
        return this;
    }

    @Override
    public SmsUserEventMastRecord value14(Integer value) {
        setUpdateno(value);
        return this;
    }

    @Override
    public SmsUserEventMastRecord value15(String value) {
        setEntityid(value);
        return this;
    }

    @Override
    public SmsUserEventMastRecord values(Long value1, Long value2, String value3, String value4, String value5, Integer value6, Boolean value7, LocalDateTime value8, String value9, String value10, LocalDateTime value11, String value12, String value13, Integer value14, String value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ISmsUserEventMast from) {
        setId(from.getId());
        setUserid(from.getUserid());
        setEventtype(from.getEventtype());
        setContent(from.getContent());
        setMemo(from.getMemo());
        setStatus(from.getStatus());
        setDeleted(from.getDeleted());
        setCreatedate(from.getCreatedate());
        setCreateuser(from.getCreateuser());
        setCreateorg(from.getCreateorg());
        setUpdatedate(from.getUpdatedate());
        setUpdateuser(from.getUpdateuser());
        setUpdateorg(from.getUpdateorg());
        setUpdateno(from.getUpdateno());
        setEntityid(from.getEntityid());
    }

    @Override
    public <E extends ISmsUserEventMast> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SmsUserEventMastRecord
     */
    public SmsUserEventMastRecord() {
        super(SmsUserEventMast.SMS_USER_EVENT_MAST);
    }

    /**
     * Create a detached, initialised SmsUserEventMastRecord
     */
    public SmsUserEventMastRecord(Long id, Long userid, String eventtype, String content, String memo, Integer status, Boolean deleted, LocalDateTime createdate, String createuser, String createorg, LocalDateTime updatedate, String updateuser, String updateorg, Integer updateno, String entityid) {
        super(SmsUserEventMast.SMS_USER_EVENT_MAST);

        setId(id);
        setUserid(userid);
        setEventtype(eventtype);
        setContent(content);
        setMemo(memo);
        setStatus(status);
        setDeleted(deleted);
        setCreatedate(createdate);
        setCreateuser(createuser);
        setCreateorg(createorg);
        setUpdatedate(updatedate);
        setUpdateuser(updateuser);
        setUpdateorg(updateorg);
        setUpdateno(updateno);
        setEntityid(entityid);
    }
}
