/*
 * This file is generated by jOOQ.
 */
package com.gvdroid.simple.jooq.code.sms.tables.pojos;


import com.gvdroid.simple.jooq.code.sms.tables.interfaces.ISmsUserPassport;

import java.time.LocalDateTime;


/**
 * 权限-用户登陆凭证
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmsUserPassport implements ISmsUserPassport {

    private static final long serialVersionUID = 1L;

    private Long          id;
    private Long          userid;
    private String        passporttype;
    private String        passportno;
    private String        saltcode;
    private String        password;
    private LocalDateTime lastlogindate;
    private Integer       status;
    private Boolean       deleted;
    private LocalDateTime createdate;
    private String        createuser;
    private String        createorg;
    private LocalDateTime updatedate;
    private String        updateuser;
    private String        updateorg;
    private Integer       updateno;
    private String        entityid;

    public SmsUserPassport() {}

    public SmsUserPassport(ISmsUserPassport value) {
        this.id = value.getId();
        this.userid = value.getUserid();
        this.passporttype = value.getPassporttype();
        this.passportno = value.getPassportno();
        this.saltcode = value.getSaltcode();
        this.password = value.getPassword();
        this.lastlogindate = value.getLastlogindate();
        this.status = value.getStatus();
        this.deleted = value.getDeleted();
        this.createdate = value.getCreatedate();
        this.createuser = value.getCreateuser();
        this.createorg = value.getCreateorg();
        this.updatedate = value.getUpdatedate();
        this.updateuser = value.getUpdateuser();
        this.updateorg = value.getUpdateorg();
        this.updateno = value.getUpdateno();
        this.entityid = value.getEntityid();
    }

    public SmsUserPassport(
        Long          id,
        Long          userid,
        String        passporttype,
        String        passportno,
        String        saltcode,
        String        password,
        LocalDateTime lastlogindate,
        Integer       status,
        Boolean       deleted,
        LocalDateTime createdate,
        String        createuser,
        String        createorg,
        LocalDateTime updatedate,
        String        updateuser,
        String        updateorg,
        Integer       updateno,
        String        entityid
    ) {
        this.id = id;
        this.userid = userid;
        this.passporttype = passporttype;
        this.passportno = passportno;
        this.saltcode = saltcode;
        this.password = password;
        this.lastlogindate = lastlogindate;
        this.status = status;
        this.deleted = deleted;
        this.createdate = createdate;
        this.createuser = createuser;
        this.createorg = createorg;
        this.updatedate = updatedate;
        this.updateuser = updateuser;
        this.updateorg = updateorg;
        this.updateno = updateno;
        this.entityid = entityid;
    }

    /**
     * Getter for <code>sms.sms_user_passport.id</code>. 主键
     */
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>sms.sms_user_passport.id</code>. 主键
     */
    @Override
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>sms.sms_user_passport.userId</code>. 用户编号
     */
    @Override
    public Long getUserid() {
        return this.userid;
    }

    /**
     * Setter for <code>sms.sms_user_passport.userId</code>. 用户编号
     */
    @Override
    public void setUserid(Long userid) {
        this.userid = userid;
    }

    /**
     * Getter for <code>sms.sms_user_passport.passportType</code>. 账号类型 account, weixin, qq, weibo, jd, github
     */
    @Override
    public String getPassporttype() {
        return this.passporttype;
    }

    /**
     * Setter for <code>sms.sms_user_passport.passportType</code>. 账号类型 account, weixin, qq, weibo, jd, github
     */
    @Override
    public void setPassporttype(String passporttype) {
        this.passporttype = passporttype;
    }

    /**
     * Getter for <code>sms.sms_user_passport.passportNo</code>. 登录账号
     */
    @Override
    public String getPassportno() {
        return this.passportno;
    }

    /**
     * Setter for <code>sms.sms_user_passport.passportNo</code>. 登录账号
     */
    @Override
    public void setPassportno(String passportno) {
        this.passportno = passportno;
    }

    /**
     * Getter for <code>sms.sms_user_passport.saltCode</code>. 混淆码
     */
    @Override
    public String getSaltcode() {
        return this.saltcode;
    }

    /**
     * Setter for <code>sms.sms_user_passport.saltCode</code>. 混淆码
     */
    @Override
    public void setSaltcode(String saltcode) {
        this.saltcode = saltcode;
    }

    /**
     * Getter for <code>sms.sms_user_passport.password</code>. 登录密码
     */
    @Override
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for <code>sms.sms_user_passport.password</code>. 登录密码
     */
    @Override
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Getter for <code>sms.sms_user_passport.lastLoginDate</code>. 上次登录时间
     */
    @Override
    public LocalDateTime getLastlogindate() {
        return this.lastlogindate;
    }

    /**
     * Setter for <code>sms.sms_user_passport.lastLoginDate</code>. 上次登录时间
     */
    @Override
    public void setLastlogindate(LocalDateTime lastlogindate) {
        this.lastlogindate = lastlogindate;
    }

    /**
     * Getter for <code>sms.sms_user_passport.status</code>. 状态 1 normal
     */
    @Override
    public Integer getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>sms.sms_user_passport.status</code>. 状态 1 normal
     */
    @Override
    public void setStatus(Integer status) {
        this.status = status;
    }

    /**
     * Getter for <code>sms.sms_user_passport.deleted</code>. 删除状态 0 正常 1 逻辑删除
     */
    @Override
    public Boolean getDeleted() {
        return this.deleted;
    }

    /**
     * Setter for <code>sms.sms_user_passport.deleted</code>. 删除状态 0 正常 1 逻辑删除
     */
    @Override
    public void setDeleted(Boolean deleted) {
        this.deleted = deleted;
    }

    /**
     * Getter for <code>sms.sms_user_passport.createDate</code>. 创建时间
     */
    @Override
    public LocalDateTime getCreatedate() {
        return this.createdate;
    }

    /**
     * Setter for <code>sms.sms_user_passport.createDate</code>. 创建时间
     */
    @Override
    public void setCreatedate(LocalDateTime createdate) {
        this.createdate = createdate;
    }

    /**
     * Getter for <code>sms.sms_user_passport.createUser</code>. 创建人员
     */
    @Override
    public String getCreateuser() {
        return this.createuser;
    }

    /**
     * Setter for <code>sms.sms_user_passport.createUser</code>. 创建人员
     */
    @Override
    public void setCreateuser(String createuser) {
        this.createuser = createuser;
    }

    /**
     * Getter for <code>sms.sms_user_passport.createOrg</code>. 创建机构
     */
    @Override
    public String getCreateorg() {
        return this.createorg;
    }

    /**
     * Setter for <code>sms.sms_user_passport.createOrg</code>. 创建机构
     */
    @Override
    public void setCreateorg(String createorg) {
        this.createorg = createorg;
    }

    /**
     * Getter for <code>sms.sms_user_passport.updateDate</code>. 维护时间
     */
    @Override
    public LocalDateTime getUpdatedate() {
        return this.updatedate;
    }

    /**
     * Setter for <code>sms.sms_user_passport.updateDate</code>. 维护时间
     */
    @Override
    public void setUpdatedate(LocalDateTime updatedate) {
        this.updatedate = updatedate;
    }

    /**
     * Getter for <code>sms.sms_user_passport.updateUser</code>. 维护人员
     */
    @Override
    public String getUpdateuser() {
        return this.updateuser;
    }

    /**
     * Setter for <code>sms.sms_user_passport.updateUser</code>. 维护人员
     */
    @Override
    public void setUpdateuser(String updateuser) {
        this.updateuser = updateuser;
    }

    /**
     * Getter for <code>sms.sms_user_passport.updateOrg</code>. 维护机构
     */
    @Override
    public String getUpdateorg() {
        return this.updateorg;
    }

    /**
     * Setter for <code>sms.sms_user_passport.updateOrg</code>. 维护机构
     */
    @Override
    public void setUpdateorg(String updateorg) {
        this.updateorg = updateorg;
    }

    /**
     * Getter for <code>sms.sms_user_passport.updateNo</code>. 维护序号
     */
    @Override
    public Integer getUpdateno() {
        return this.updateno;
    }

    /**
     * Setter for <code>sms.sms_user_passport.updateNo</code>. 维护序号
     */
    @Override
    public void setUpdateno(Integer updateno) {
        this.updateno = updateno;
    }

    /**
     * Getter for <code>sms.sms_user_passport.entityId</code>. 所属实体
     */
    @Override
    public String getEntityid() {
        return this.entityid;
    }

    /**
     * Setter for <code>sms.sms_user_passport.entityId</code>. 所属实体
     */
    @Override
    public void setEntityid(String entityid) {
        this.entityid = entityid;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("SmsUserPassport (");

        sb.append(id);
        sb.append(", ").append(userid);
        sb.append(", ").append(passporttype);
        sb.append(", ").append(passportno);
        sb.append(", ").append(saltcode);
        sb.append(", ").append(password);
        sb.append(", ").append(lastlogindate);
        sb.append(", ").append(status);
        sb.append(", ").append(deleted);
        sb.append(", ").append(createdate);
        sb.append(", ").append(createuser);
        sb.append(", ").append(createorg);
        sb.append(", ").append(updatedate);
        sb.append(", ").append(updateuser);
        sb.append(", ").append(updateorg);
        sb.append(", ").append(updateno);
        sb.append(", ").append(entityid);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ISmsUserPassport from) {
        setId(from.getId());
        setUserid(from.getUserid());
        setPassporttype(from.getPassporttype());
        setPassportno(from.getPassportno());
        setSaltcode(from.getSaltcode());
        setPassword(from.getPassword());
        setLastlogindate(from.getLastlogindate());
        setStatus(from.getStatus());
        setDeleted(from.getDeleted());
        setCreatedate(from.getCreatedate());
        setCreateuser(from.getCreateuser());
        setCreateorg(from.getCreateorg());
        setUpdatedate(from.getUpdatedate());
        setUpdateuser(from.getUpdateuser());
        setUpdateorg(from.getUpdateorg());
        setUpdateno(from.getUpdateno());
        setEntityid(from.getEntityid());
    }

    @Override
    public <E extends ISmsUserPassport> E into(E into) {
        into.from(this);
        return into;
    }
}
