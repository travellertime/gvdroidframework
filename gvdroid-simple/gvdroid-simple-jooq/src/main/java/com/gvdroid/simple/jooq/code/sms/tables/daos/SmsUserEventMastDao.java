/*
 * This file is generated by jOOQ.
 */
package com.gvdroid.simple.jooq.code.sms.tables.daos;


import com.gvdroid.simple.jooq.code.sms.tables.SmsUserEventMast;
import com.gvdroid.simple.jooq.code.sms.tables.records.SmsUserEventMastRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * 权限-用户事件主表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class SmsUserEventMastDao extends DAOImpl<SmsUserEventMastRecord, com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast, Long> {

    /**
     * Create a new SmsUserEventMastDao without any configuration
     */
    public SmsUserEventMastDao() {
        super(SmsUserEventMast.SMS_USER_EVENT_MAST, com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast.class);
    }

    /**
     * Create a new SmsUserEventMastDao with an attached configuration
     */
    @Autowired
    public SmsUserEventMastDao(Configuration configuration) {
        super(SmsUserEventMast.SMS_USER_EVENT_MAST, com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast.class, configuration);
    }

    @Override
    public Long getId(com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SmsUserEventMast.SMS_USER_EVENT_MAST.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchById(Long... values) {
        return fetch(SmsUserEventMast.SMS_USER_EVENT_MAST.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast fetchOneById(Long value) {
        return fetchOne(SmsUserEventMast.SMS_USER_EVENT_MAST.ID, value);
    }

    /**
     * Fetch records that have <code>userId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchRangeOfUserid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SmsUserEventMast.SMS_USER_EVENT_MAST.USERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>userId IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchByUserid(Long... values) {
        return fetch(SmsUserEventMast.SMS_USER_EVENT_MAST.USERID, values);
    }

    /**
     * Fetch records that have <code>eventType BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchRangeOfEventtype(String lowerInclusive, String upperInclusive) {
        return fetchRange(SmsUserEventMast.SMS_USER_EVENT_MAST.EVENTTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>eventType IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchByEventtype(String... values) {
        return fetch(SmsUserEventMast.SMS_USER_EVENT_MAST.EVENTTYPE, values);
    }

    /**
     * Fetch records that have <code>content BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchRangeOfContent(String lowerInclusive, String upperInclusive) {
        return fetchRange(SmsUserEventMast.SMS_USER_EVENT_MAST.CONTENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchByContent(String... values) {
        return fetch(SmsUserEventMast.SMS_USER_EVENT_MAST.CONTENT, values);
    }

    /**
     * Fetch records that have <code>memo BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchRangeOfMemo(String lowerInclusive, String upperInclusive) {
        return fetchRange(SmsUserEventMast.SMS_USER_EVENT_MAST.MEMO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>memo IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchByMemo(String... values) {
        return fetch(SmsUserEventMast.SMS_USER_EVENT_MAST.MEMO, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchRangeOfStatus(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(SmsUserEventMast.SMS_USER_EVENT_MAST.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchByStatus(Integer... values) {
        return fetch(SmsUserEventMast.SMS_USER_EVENT_MAST.STATUS, values);
    }

    /**
     * Fetch records that have <code>deleted BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchRangeOfDeleted(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(SmsUserEventMast.SMS_USER_EVENT_MAST.DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchByDeleted(Boolean... values) {
        return fetch(SmsUserEventMast.SMS_USER_EVENT_MAST.DELETED, values);
    }

    /**
     * Fetch records that have <code>createDate BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchRangeOfCreatedate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(SmsUserEventMast.SMS_USER_EVENT_MAST.CREATEDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>createDate IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchByCreatedate(LocalDateTime... values) {
        return fetch(SmsUserEventMast.SMS_USER_EVENT_MAST.CREATEDATE, values);
    }

    /**
     * Fetch records that have <code>createUser BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchRangeOfCreateuser(String lowerInclusive, String upperInclusive) {
        return fetchRange(SmsUserEventMast.SMS_USER_EVENT_MAST.CREATEUSER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>createUser IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchByCreateuser(String... values) {
        return fetch(SmsUserEventMast.SMS_USER_EVENT_MAST.CREATEUSER, values);
    }

    /**
     * Fetch records that have <code>createOrg BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchRangeOfCreateorg(String lowerInclusive, String upperInclusive) {
        return fetchRange(SmsUserEventMast.SMS_USER_EVENT_MAST.CREATEORG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>createOrg IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchByCreateorg(String... values) {
        return fetch(SmsUserEventMast.SMS_USER_EVENT_MAST.CREATEORG, values);
    }

    /**
     * Fetch records that have <code>updateDate BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchRangeOfUpdatedate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(SmsUserEventMast.SMS_USER_EVENT_MAST.UPDATEDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updateDate IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchByUpdatedate(LocalDateTime... values) {
        return fetch(SmsUserEventMast.SMS_USER_EVENT_MAST.UPDATEDATE, values);
    }

    /**
     * Fetch records that have <code>updateUser BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchRangeOfUpdateuser(String lowerInclusive, String upperInclusive) {
        return fetchRange(SmsUserEventMast.SMS_USER_EVENT_MAST.UPDATEUSER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updateUser IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchByUpdateuser(String... values) {
        return fetch(SmsUserEventMast.SMS_USER_EVENT_MAST.UPDATEUSER, values);
    }

    /**
     * Fetch records that have <code>updateOrg BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchRangeOfUpdateorg(String lowerInclusive, String upperInclusive) {
        return fetchRange(SmsUserEventMast.SMS_USER_EVENT_MAST.UPDATEORG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updateOrg IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchByUpdateorg(String... values) {
        return fetch(SmsUserEventMast.SMS_USER_EVENT_MAST.UPDATEORG, values);
    }

    /**
     * Fetch records that have <code>updateNo BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchRangeOfUpdateno(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(SmsUserEventMast.SMS_USER_EVENT_MAST.UPDATENO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updateNo IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchByUpdateno(Integer... values) {
        return fetch(SmsUserEventMast.SMS_USER_EVENT_MAST.UPDATENO, values);
    }

    /**
     * Fetch records that have <code>entityId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchRangeOfEntityid(String lowerInclusive, String upperInclusive) {
        return fetchRange(SmsUserEventMast.SMS_USER_EVENT_MAST.ENTITYID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>entityId IN (values)</code>
     */
    public List<com.gvdroid.simple.jooq.code.sms.tables.pojos.SmsUserEventMast> fetchByEntityid(String... values) {
        return fetch(SmsUserEventMast.SMS_USER_EVENT_MAST.ENTITYID, values);
    }
}
