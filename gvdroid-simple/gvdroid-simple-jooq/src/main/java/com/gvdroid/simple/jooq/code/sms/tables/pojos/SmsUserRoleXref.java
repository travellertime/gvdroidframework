/*
 * This file is generated by jOOQ.
 */
package com.gvdroid.simple.jooq.code.sms.tables.pojos;


import com.gvdroid.simple.jooq.code.sms.tables.interfaces.ISmsUserRoleXref;

import java.time.LocalDateTime;


/**
 * 权限-用户角色关联表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmsUserRoleXref implements ISmsUserRoleXref {

    private static final long serialVersionUID = 1L;

    private Long          id;
    private Long          roleid;
    private Long          userid;
    private Integer       status;
    private Boolean       deleted;
    private LocalDateTime createdate;
    private String        createuser;
    private String        createorg;
    private LocalDateTime updatedate;
    private String        updateuser;
    private String        updateorg;
    private Integer       updateno;
    private String        entityid;

    public SmsUserRoleXref() {}

    public SmsUserRoleXref(ISmsUserRoleXref value) {
        this.id = value.getId();
        this.roleid = value.getRoleid();
        this.userid = value.getUserid();
        this.status = value.getStatus();
        this.deleted = value.getDeleted();
        this.createdate = value.getCreatedate();
        this.createuser = value.getCreateuser();
        this.createorg = value.getCreateorg();
        this.updatedate = value.getUpdatedate();
        this.updateuser = value.getUpdateuser();
        this.updateorg = value.getUpdateorg();
        this.updateno = value.getUpdateno();
        this.entityid = value.getEntityid();
    }

    public SmsUserRoleXref(
        Long          id,
        Long          roleid,
        Long          userid,
        Integer       status,
        Boolean       deleted,
        LocalDateTime createdate,
        String        createuser,
        String        createorg,
        LocalDateTime updatedate,
        String        updateuser,
        String        updateorg,
        Integer       updateno,
        String        entityid
    ) {
        this.id = id;
        this.roleid = roleid;
        this.userid = userid;
        this.status = status;
        this.deleted = deleted;
        this.createdate = createdate;
        this.createuser = createuser;
        this.createorg = createorg;
        this.updatedate = updatedate;
        this.updateuser = updateuser;
        this.updateorg = updateorg;
        this.updateno = updateno;
        this.entityid = entityid;
    }

    /**
     * Getter for <code>sms.sms_user_role_xref.id</code>. 主键
     */
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>sms.sms_user_role_xref.id</code>. 主键
     */
    @Override
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>sms.sms_user_role_xref.roleId</code>. 角色编号
     */
    @Override
    public Long getRoleid() {
        return this.roleid;
    }

    /**
     * Setter for <code>sms.sms_user_role_xref.roleId</code>. 角色编号
     */
    @Override
    public void setRoleid(Long roleid) {
        this.roleid = roleid;
    }

    /**
     * Getter for <code>sms.sms_user_role_xref.userId</code>. 用户编号
     */
    @Override
    public Long getUserid() {
        return this.userid;
    }

    /**
     * Setter for <code>sms.sms_user_role_xref.userId</code>. 用户编号
     */
    @Override
    public void setUserid(Long userid) {
        this.userid = userid;
    }

    /**
     * Getter for <code>sms.sms_user_role_xref.status</code>. 状态 1 normal
     */
    @Override
    public Integer getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>sms.sms_user_role_xref.status</code>. 状态 1 normal
     */
    @Override
    public void setStatus(Integer status) {
        this.status = status;
    }

    /**
     * Getter for <code>sms.sms_user_role_xref.deleted</code>. 删除状态 0 正常 1 逻辑删除
     */
    @Override
    public Boolean getDeleted() {
        return this.deleted;
    }

    /**
     * Setter for <code>sms.sms_user_role_xref.deleted</code>. 删除状态 0 正常 1 逻辑删除
     */
    @Override
    public void setDeleted(Boolean deleted) {
        this.deleted = deleted;
    }

    /**
     * Getter for <code>sms.sms_user_role_xref.createDate</code>. 创建时间
     */
    @Override
    public LocalDateTime getCreatedate() {
        return this.createdate;
    }

    /**
     * Setter for <code>sms.sms_user_role_xref.createDate</code>. 创建时间
     */
    @Override
    public void setCreatedate(LocalDateTime createdate) {
        this.createdate = createdate;
    }

    /**
     * Getter for <code>sms.sms_user_role_xref.createUser</code>. 创建人员
     */
    @Override
    public String getCreateuser() {
        return this.createuser;
    }

    /**
     * Setter for <code>sms.sms_user_role_xref.createUser</code>. 创建人员
     */
    @Override
    public void setCreateuser(String createuser) {
        this.createuser = createuser;
    }

    /**
     * Getter for <code>sms.sms_user_role_xref.createOrg</code>. 创建机构
     */
    @Override
    public String getCreateorg() {
        return this.createorg;
    }

    /**
     * Setter for <code>sms.sms_user_role_xref.createOrg</code>. 创建机构
     */
    @Override
    public void setCreateorg(String createorg) {
        this.createorg = createorg;
    }

    /**
     * Getter for <code>sms.sms_user_role_xref.updateDate</code>. 维护时间
     */
    @Override
    public LocalDateTime getUpdatedate() {
        return this.updatedate;
    }

    /**
     * Setter for <code>sms.sms_user_role_xref.updateDate</code>. 维护时间
     */
    @Override
    public void setUpdatedate(LocalDateTime updatedate) {
        this.updatedate = updatedate;
    }

    /**
     * Getter for <code>sms.sms_user_role_xref.updateUser</code>. 维护人员
     */
    @Override
    public String getUpdateuser() {
        return this.updateuser;
    }

    /**
     * Setter for <code>sms.sms_user_role_xref.updateUser</code>. 维护人员
     */
    @Override
    public void setUpdateuser(String updateuser) {
        this.updateuser = updateuser;
    }

    /**
     * Getter for <code>sms.sms_user_role_xref.updateOrg</code>. 维护机构
     */
    @Override
    public String getUpdateorg() {
        return this.updateorg;
    }

    /**
     * Setter for <code>sms.sms_user_role_xref.updateOrg</code>. 维护机构
     */
    @Override
    public void setUpdateorg(String updateorg) {
        this.updateorg = updateorg;
    }

    /**
     * Getter for <code>sms.sms_user_role_xref.updateNo</code>. 维护序号
     */
    @Override
    public Integer getUpdateno() {
        return this.updateno;
    }

    /**
     * Setter for <code>sms.sms_user_role_xref.updateNo</code>. 维护序号
     */
    @Override
    public void setUpdateno(Integer updateno) {
        this.updateno = updateno;
    }

    /**
     * Getter for <code>sms.sms_user_role_xref.entityId</code>. 所属实体
     */
    @Override
    public String getEntityid() {
        return this.entityid;
    }

    /**
     * Setter for <code>sms.sms_user_role_xref.entityId</code>. 所属实体
     */
    @Override
    public void setEntityid(String entityid) {
        this.entityid = entityid;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("SmsUserRoleXref (");

        sb.append(id);
        sb.append(", ").append(roleid);
        sb.append(", ").append(userid);
        sb.append(", ").append(status);
        sb.append(", ").append(deleted);
        sb.append(", ").append(createdate);
        sb.append(", ").append(createuser);
        sb.append(", ").append(createorg);
        sb.append(", ").append(updatedate);
        sb.append(", ").append(updateuser);
        sb.append(", ").append(updateorg);
        sb.append(", ").append(updateno);
        sb.append(", ").append(entityid);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ISmsUserRoleXref from) {
        setId(from.getId());
        setRoleid(from.getRoleid());
        setUserid(from.getUserid());
        setStatus(from.getStatus());
        setDeleted(from.getDeleted());
        setCreatedate(from.getCreatedate());
        setCreateuser(from.getCreateuser());
        setCreateorg(from.getCreateorg());
        setUpdatedate(from.getUpdatedate());
        setUpdateuser(from.getUpdateuser());
        setUpdateorg(from.getUpdateorg());
        setUpdateno(from.getUpdateno());
        setEntityid(from.getEntityid());
    }

    @Override
    public <E extends ISmsUserRoleXref> E into(E into) {
        into.from(this);
        return into;
    }
}
